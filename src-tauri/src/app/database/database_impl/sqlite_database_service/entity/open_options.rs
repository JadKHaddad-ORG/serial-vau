//! `SeaORM` Entity, @generated by sea-orm-codegen 1.0.1

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "open_options")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i32,
    pub serial_port_id: i32,
    pub tag: String,
    pub init_read_state: i16,
    pub baud_rate: i32,
    pub data_bits: i16,
    pub flow_control: i16,
    pub parity: i16,
    pub stop_bits: i16,
    pub timeout_milli_secs: i32,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::serial_port::Entity",
        from = "Column::SerialPortId",
        to = "super::serial_port::Column::Id",
        on_update = "Cascade",
        on_delete = "Cascade"
    )]
    SerialPort,
}

impl Related<super::serial_port::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::SerialPort.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
